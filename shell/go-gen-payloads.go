// +build ignore

package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func main() {
	cBuf := bytes.NewBuffer(nil)
	vBuf := bytes.NewBuffer(nil)

	exploitFiles, _ := filepath.Glob("../exploit-js/*.js")
	scriptFiles, _ := filepath.Glob("payloads/js/*.js")

	scriptFiles = append(exploitFiles, scriptFiles...)

	for _, scriptFile := range scriptFiles {
		fileName := filepath.Base(scriptFile)
		payloadName := fileName[:len(fileName)-3]
		content, err := ioutil.ReadFile(scriptFile)
		if err != nil {
			panic(err)
		}

		cBuf.WriteString("\tJS")
		cBuf.WriteString(payloadName)
		cBuf.WriteString("Str = `")
		cBuf.Write(content)
		cBuf.WriteString("`\n\n")

		vBuf.WriteString("\tJS")
		vBuf.WriteString(payloadName)
		vBuf.WriteString(" = []byte(JS")
		vBuf.WriteString(payloadName)
		vBuf.WriteString("Str)\n")
	}

	ts := time.Now()
	out := fmt.Sprintf(rootTemplate, ts, strings.Trim(cBuf.String(), "\n"), strings.Trim(vBuf.String(), "\n"))

	f, err := os.OpenFile("payloads/payloads.go", os.O_WRONLY|os.O_CREATE|os.O_TRUNC, 0644)
	if err != nil {
		panic(err)
	}

	_, err = f.Write([]byte(out))
	if err != nil {
		panic(err)
	}

	f.Sync()
	f.Close()
}

const rootTemplate = `// Code generated by go generate; DO NOT EDIT.
// This file was generated by our future AI overlords at
// %s
package payloads

const(
%s
)

var (
%s
)
`
